[[inputs.file]]
data_format = "value"
data_type = "string"
files = ["./metrics/system_processes/**json"]
[inputs.file.tags]
type = 'system_processes'

[[processors.starlark]]
namepass = ["file"]
source = '''
load("json.star", "json")
load("time.star", "time")

def apply(metric):
  d = json.decode(metric.fields['value'])
  server = d['servers'].keys()[0]
  timestamp = d['timestamp']
  date = time.parse_time(d['timestamp'], location="UTC").unix_nano
  metrics = []
  skip_fields = ['command_full', 'command_pidstat']

  if 'error' in d['servers'][server]['system_processes'].keys() and len(d['servers'][server]['system_processes']['error']) > 0:
     return

  for k, v in d['servers'][server]['system_processes'].items():
    if k.startswith('unknown'):
       continue
    for i,j in v.items():
      if j == None or i in skip_fields:
        continue

      m = Metric("system_processes")
      m.tags['server'] = server
      m.tags['service'] = k
      m.time = date
      m.fields[i] = j
      m.time = date
      metrics.append(m)

  return metrics
'''
[processors.starlark.tagpass]
type = ['system_processes']
